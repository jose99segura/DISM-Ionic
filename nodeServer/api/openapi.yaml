openapi: 3.0.0
info:
  title: Practica 1
  description: Esto es el backend de la practica 1
  contact:
    email: jlsn5@alu.ua.es
  version: 3.0.0
servers:
- url: http://localhost:8090/
  description: Servidor localhost 8090
paths:
  /clientes:
    get:
      tags:
      - clientes
      summary: Get cliente
      description: get cliente
      operationId: clientesGET
      parameters:
      - name: id
        in: query
        description: hacer get cliente
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid status value
      x-swagger-router-controller: Clientes
    post:
      tags:
      - clientes
      summary: Subir cliente
      description: Crear cliente
      operationId: postCliente
      requestBody:
        description: Crear nuevo cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        "405":
          description: Invalid input
      x-swagger-router-controller: Clientes
  /clientes/{clienteId}:
    put:
      tags:
      - clientes
      summary: Update cliente
      description: Actualizar cliente
      operationId: updateCliente
      parameters:
      - name: clienteId
        in: path
        description: Cliente para eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: actualiza cliente existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Clientes
    delete:
      tags:
      - clientes
      summary: Borrar cliente
      description: Borra cliente por id
      operationId: deleteCliente
      parameters:
      - name: clienteId
        in: path
        description: Id de cliente a eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid value
      x-swagger-router-controller: Clientes
  /partes:
    get:
      tags:
      - partes
      summary: Subir parte
      description: get parte
      operationId: partesGET
      parameters:
      - name: id
        in: query
        description: hacer get parte
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid status value
      x-swagger-router-controller: Partes
    post:
      tags:
      - partes
      summary: Subir cliente
      description: Crear cliente
      operationId: postParte
      requestBody:
        description: Crear nuevo cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parte'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parte'
        "405":
          description: Invalid input
      x-swagger-router-controller: Partes
  /partes/{parteId}:
    put:
      tags:
      - partes
      summary: Update cliente
      description: Actualizar cliente
      operationId: updateParte
      parameters:
      - name: parteId
        in: path
        description: Cliente para eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: actualiza cliente existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Partes
    delete:
      tags:
      - partes
      summary: Borrar cliente
      description: Borra cliente por id
      operationId: deleteParte
      parameters:
      - name: parteId
        in: path
        description: Id de cliente a eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid
      x-swagger-router-controller: Partes
  /usuarios:
    get:
      tags:
      - usuarios
      summary: Get usuario
      description: get usuario
      operationId: usuariosGET
      parameters:
      - name: id
        in: query
        description: hacer get usuario
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid status value
      x-swagger-router-controller: Usuarios
components:
  schemas:
    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        nombre:
          type: string
          example: Jose
        dni:
          type: string
          example: 12345678A
        direccion:
          type: string
          example: Calle Pizarro
        poblacion:
          type: string
          example: Alicante
        telefono:
          type: string
          example: "123456789"
        email:
          type: string
          example: usuario@gmail.com
      example:
        direccion: Calle Pizarro
        id: 10
        poblacion: Alicante
        telefono: "123456789"
        nombre: Jose
        dni: 12345678A
        email: usuario@gmail.com
    Parte:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        fecha:
          type: string
          example: 2022-12-06T23:00:00.000Z
        hora:
          type: string
          example: 10:10:10
        descripcion:
          type: string
          example: Descripcion parte 1
        incidencia:
          type: boolean
          example: false
        tiempo:
          type: integer
          example: 123
        latitud:
          type: number
          example: 42
        longitud:
          type: number
          example: -24
      example:
        descripcion: Descripcion parte 1
        fecha: 2022-12-06T23:00:00.000Z
        latitud: 42
        longitud: -24
        tiempo: 123
        hora: 10:10:10
        incidencia: false
        id: 10
