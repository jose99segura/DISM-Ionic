
openapi: 3.0.0
servers:
  # Comentario

  - description: API Practica 1
    url: https://petstore3.swagger.io/api/v3
  - description: Servidor DTIC
    url: https://dtic.org/HolaMundo/1.0.0
  - description: Servidor localhost
    url: http://localhost:3000/

info:
  title: Practica 1
  description: Esto es el backend de la practica 1
  version: "1.0.0"
  contact:
    email: jlsn5@alu.ua.es
paths:

  #################### CLIENTES  ####################
  /clientes:
  # GET CLIENTE
    get:
      tags:
        - clientes
      summary: Get cliente
      description: get cliente
      parameters:
      - in: query
        name: id
        description: hacer get cliente
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  nombre:
                    type: string
                  contador:
                    type: integer

        '400':
          description: Invalid status value
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    # POST CLIENTE
    post:
      tags:
        - clientes
      summary: Subir cliente
      description: 'Crear cliente'
      operationId: postCliente
      requestBody:
        description: Crear nuevo cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        '405':
          description: Invalid input

  /clientes/{clienteId}:
    # PUT CLIENTE
    put:
      tags:
        - clientes
      summary: Update cliente
      description: Actualizar cliente
      operationId: updateCliente
      parameters:
        - name: clienteId
          in: path
          description: Cliente para eliminar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: actualiza cliente existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        default:
          description: successful operation

    # DELETE
    delete:
      tags:
        - clientes
      summary: Borrar cliente
      description: Borra cliente por id
      operationId: deleteCliente
      parameters:
        - name: clienteId
          in: path
          description: Id de cliente a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value

  #################### PARTES  ####################
  /partes:
  # GET PARTE
    get:
      tags:
        - partes
      summary: Subir parte
      description: get parte
      parameters:
      - in: query
        name: id
        description: hacer get parte
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  nombre:
                    type: string
                  contador:
                    type: integer

        '400':
          description: Invalid status value
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    # POST CLIENTE
    post:
      tags:
        - partes
      summary: Subir cliente
      description: 'Crear cliente'
      operationId: postParte
      requestBody:
        description: Crear nuevo cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parte'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parte'
        '405':
          description: Invalid input

  /partes/{parteId}:
    # PUT CLIENTE
    put:
      tags:
        - partes
      summary: Update cliente
      description: Actualizar cliente
      operationId: updateParte
      parameters:
        - name: parteId
          in: path
          description: Cliente para eliminar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: actualiza cliente existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        default:
          description: successful operation

    # DELETE
    delete:
      tags:
        - partes
      summary: Borrar cliente
      description: Borra cliente por id
      operationId: deleteParte
      parameters:
        - name: parteId
          in: path
          description: Id de cliente a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value


# COMPONENTES
components:
  schemas:
    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        nombre:
          type: string
          example: Jose
        dni:
          type: string
          example: 12345678A
        direccion:
          type: string
          example: Calle Pizarro
        poblacion:
          type: string
          example: Alicante
        telefono:
          type: string
          example: 123456789
        email:
          type: string
          example: usuario@gmail.com

    Parte:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        fecga:
          type: string
          example: 01/11/2022
        hora:
          type: string
          example: 10:10
        descripcion:
          type: string
          example: Descripcion parte 1
        incidencia:
          type: boolean
          example: false
        tiempo:
          type: integer
          example: 123
        latitud:
          type: number
          example: 42
        longitud:
          type: number
          example: -24

